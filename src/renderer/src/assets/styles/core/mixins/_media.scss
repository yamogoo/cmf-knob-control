// @mixin w-xl {
//     @media screen and (min-width: get('width.xl', $breakpoints)) {
//         @content;
//     }
// }

// @mixin w-lg {
//     @media screen and (min-width: get('width.lg', $breakpoints)) and (max-width: get('width.xl', $breakpoints)) {
//         @content;
//     }
// }

// @mixin w-md {
//     @media screen and (min-width: get('width.md', $breakpoints)) and (max-width: $lg) {
//         @content;
//     }
// }

// @mixin w-sm {
//     @media screen and (min-width: $sm) and (max-width: $md) {
//         @content;
//     }
// }

// @mixin w-xs {
//     @media screen and (max-width: $sm) {
//         @content;
//     }
// }

// @include respond-above(sm) {}
@mixin respond-above($breakpoint, $container-name: default) {
    // If the breakpoint exists in the map.
    @if map-has-key($breakpoints, $breakpoint) {
        // Get the breakpoint value.
        $breakpoint-value: map-get($breakpoints, $breakpoint);

        @if $container-name == default {
            // Write the media query.
            @media (min-width: $breakpoint-value) {
                @content;
            }
        }
        @else {
            @container $container-name (min-width: $breakpoint-value) {
                @content;
            }
        }

        // If the breakpoint doesn't exist in the map.
    } @else {
        // Log a warning.
        @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}

//
//  RESPOND BELOW
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-below(sm) {}
@mixin respond-below($breakpoint, $container-name: default) {
    // If the breakpoint exists in the map.
    @if map-has-key($breakpoints, $breakpoint) {
        // Get the breakpoint value.
        $breakpoint-value: map-get($breakpoints, $breakpoint);

        @if $container-name == default {
            // Write the media query.
            @media (max-width: ($breakpoint-value - 1)) {
                @content;
            }
        }
        @else {
            @container $container-name (max-width: ($breakpoint-value - 1)) {
                @content;
            }
        }

        // If the breakpoint doesn't exist in the map.
    } @else {
        // Log a warning.
        @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}

//
//  RESPOND BETWEEN
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper, $container-name: default) {
    // If both the lower and upper breakpoints exist in the map.
    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper)
    {
        // Get the lower and upper breakpoints.
        $lower-breakpoint: map-get($breakpoints, $lower);
        $upper-breakpoint: map-get($breakpoints, $upper);

        @if $container-name == default {
            // Write the media query.
            @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
                @content;
            }   
        }
        @else {
            // Write the media query.
            @container $container-name (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
                @content;
            }
        }

        // If one or both of the breakpoints don't exist.
    } @else {
        // If lower breakpoint is invalid.
        @if (map-has-key($breakpoints, $lower) == false) {
            // Log a warning.
            @warn 'Your lower breakpoint was invalid: #{$lower}.';
        }

        // If upper breakpoint is invalid.
        @if (map-has-key($breakpoints, $upper) == false) {
            // Log a warning.
            @warn 'Your upper breakpoint was invalid: #{$upper}.';
        }
    }
}
